#!/usr/bin/env node

import chalk from 'chalk';
import boxen from 'boxen';
import { readFile } from 'node:fs/promises';
import { existsSync } from 'node:fs';

/**
 * Help System
 * –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
 */
class HelpSystem {
    constructor() {
        this.commands = {
            author: {
                title: '‚úçÔ∏è  –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤',
                commands: {
                    'author:init': {
                        description: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∞–≤—Ç–æ—Ä–∞',
                        usage: 'npm run author:init',
                        details: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ –¥–ª—è –∞—Ç—Ä–∏–±—É—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ godojo.dev'
                    },
                    'author:new': {
                        description: '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                        usage: 'npm run author:new',
                        details: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
                    },
                    'author:validate': {
                        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                        usage: 'npm run author:validate',
                        details: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞ (800+ —Å–ª–æ–≤, –ø—Ä–∏–º–µ—Ä—ã, —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è)'
                    },
                    'author:stats': {
                        description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ—Ä–∞',
                        usage: 'npm run author:stats',
                        details: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –∏—Å—Ç–æ—Ä–∏—é'
                    },
                    'author:preview': {
                        description: '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                        usage: 'npm run author:preview [file]',
                        details: '–õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'
                    },
                    'author:publish': {
                        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
                        usage: 'npm run author:publish',
                        details: '–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ PR'
                    }
                }
            },
            content: {
                title: 'üìù –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º',
                commands: {
                    'content:check': {
                        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                        usage: 'npm run content:check',
                        details: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —Å—Å—ã–ª–∫–∏ –≤–æ –≤—Å–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ'
                    },
                    'content:format': {
                        description: '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ markdown',
                        usage: 'npm run content:format',
                        details: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö markdown —Ñ–∞–π–ª–æ–≤'
                    },
                    'content:build': {
                        description: '–°–±–æ—Ä–∫–∞ –¥–ª—è godojo.dev',
                        usage: 'npm run content:build',
                        details: '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JSON/YAML —Ñ–∞–π–ª—ã –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'
                    },
                    'content:sync': {
                        description: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Git',
                        usage: 'npm run content:sync',
                        details: '–ü–æ–º–æ—â—å —Å git –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
                    }
                }
            },
            structure: {
                title: 'üèóÔ∏è  –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞',
                commands: {
                    'structure:validate': {
                        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
                        usage: 'npm run structure:validate',
                        details: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤'
                    },
                    'structure:generate': {
                        description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
                        usage: 'npm run structure:generate',
                        details: '–°–æ–∑–¥–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã'
                    }
                }
            },
            bilingual: {
                title: 'üåç –î–≤—É—è–∑—ã—á–Ω–æ—Å—Ç—å',
                commands: {
                    'bilingual:sync': {
                        description: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤',
                        usage: 'npm run bilingual:sync',
                        details: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–µ–∂–¥—É ru/en –≤–µ—Ä—Å–∏—è–º–∏'
                    },
                    'bilingual:check': {
                        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤',
                        usage: 'npm run bilingual:check',
                        details: '–ü–æ–∏—Å–∫ –Ω–µ–ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
                    }
                }
            },
            godojo: {
                title: 'üöÄ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å godojo.dev',
                commands: {
                    'godojo:prepare': {
                        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
                        usage: 'npm run godojo:prepare',
                        details: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏'
                    },
                    'godojo:validate': {
                        description: '–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
                        usage: 'npm run godojo:validate',
                        details: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ godojo.dev'
                    }
                }
            },
            dev: {
                title: 'üõ†Ô∏è  –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
                commands: {
                    'lint': {
                        description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞',
                        usage: 'npm run lint',
                        details: 'ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ JavaScript –∏ Markdown'
                    },
                    'lint:fix': {
                        description: '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è –∫–æ–¥–∞',
                        usage: 'npm run lint:fix',
                        details: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –ª–∏–Ω—Ç–µ—Ä–∞'
                    },
                    'format': {
                        description: '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞',
                        usage: 'npm run format',
                        details: 'Prettier —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤'
                    },
                    'test': {
                        description: '–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤',
                        usage: 'npm test',
                        details: '–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö unit —Ç–µ—Å—Ç–æ–≤'
                    },
                    'test:watch': {
                        description: '–¢–µ—Å—Ç—ã –≤ —Ä–µ–∂–∏–º–µ watch',
                        usage: 'npm run test:watch',
                        details: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö'
                    },
                    'test:coverage': {
                        description: '–ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏',
                        usage: 'npm run test:coverage',
                        details: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏'
                    }
                }
            }
        };
    }

    /**
     * –ó–∞–ø—É—Å–∫ —Å–ø—Ä–∞–≤–∫–∏
     */
    async run(args = []) {
        const command = args[0];

        if (command) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
            await this.showCommandHelp(command);
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å–ø—Ä–∞–≤–∫—É
            await this.showGeneralHelp();
        }
    }

    /**
     * –û–±—â–∞—è —Å–ø—Ä–∞–≤–∫–∞
     */
    async showGeneralHelp() {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        console.log(boxen(
            chalk.blue.bold('üìö Go Tutorial Content - –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏\n\n') +
            chalk.white('–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è godojo.dev\n') +
            chalk.gray('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–µ–∫—Ç–æ–º'),
            {
                padding: 1,
                borderColor: 'blue',
                borderStyle: 'round',
                margin: 1
            }
        ));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥
        for (const [category, data] of Object.entries(this.commands)) {
            console.log(chalk.blue.bold(`\n${data.title}\n`));

            for (const [cmd, info] of Object.entries(data.commands)) {
                console.log(
                    chalk.yellow(`  npm run ${cmd}`).padEnd(35) +
                    chalk.gray(info.description)
                );
            }
        }

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        console.log(chalk.blue.bold('\nüìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å\n'));
        console.log(chalk.gray('  ‚Ä¢ –î–ª—è –ø–æ–º–æ—â–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ:'), chalk.cyan('npm run help <command>'));
        console.log(chalk.gray('  ‚Ä¢ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∞–≤—Ç–æ—Ä–∞:'), chalk.cyan('CONTRIBUTING.md'));
        console.log(chalk.gray('  ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞:'), chalk.cyan('README.md'));
        console.log(chalk.gray('  ‚Ä¢ –°–æ–∑–¥–∞—Ç—å issue:'), chalk.cyan('https://github.com/[owner]/golang-book-ru/issues'));

        // –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
        console.log(chalk.blue.bold('\nüöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤\n'));
        console.log(chalk.gray('  1.'), chalk.yellow('npm install'), '- —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
        console.log(chalk.gray('  2.'), chalk.yellow('npm run author:init'), '- —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞–≤—Ç–æ—Ä–∞');
        console.log(chalk.gray('  3.'), chalk.yellow('npm run author:new'), '- —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
        console.log(chalk.gray('  4.'), chalk.yellow('npm run author:validate'), '- –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞');
        console.log(chalk.gray('  5.'), chalk.yellow('npm run content:sync'), '- —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞\n');

        // –í–µ—Ä—Å–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        await this.showVersionInfo();
    }

    /**
     * –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
     */
    async showCommandHelp(commandName) {
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å npm run –µ—Å–ª–∏ –µ—Å—Ç—å
        const cmd = commandName.replace('npm run ', '').trim();

        // –ò—â–µ–º –∫–æ–º–∞–Ω–¥—É
        let found = false;
        for (const [category, data] of Object.entries(this.commands)) {
            if (data.commands[cmd]) {
                const cmdInfo = data.commands[cmd];

                console.log(boxen(
                    chalk.blue.bold(`üìå ${cmd}\n\n`) +
                    chalk.white(`${cmdInfo.description}\n\n`) +
                    chalk.gray(cmdInfo.details),
                    {
                        padding: 1,
                        borderColor: 'blue',
                        borderStyle: 'round',
                        title: data.title,
                        titleAlignment: 'center'
                    }
                ));

                console.log(chalk.blue('\nüìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n'));
                console.log(chalk.yellow(`  ${cmdInfo.usage}\n`));

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
                this.showExamples(cmd);

                // –°–≤—è–∑–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
                this.showRelatedCommands(cmd, category);

                found = true;
                break;
            }
        }

        if (!found) {
            console.log(chalk.red(`\n‚ùå –ö–æ–º–∞–Ω–¥–∞ '${cmd}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n`));
            console.log(chalk.gray('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ'), chalk.cyan('npm run help'), chalk.gray('–¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n'));
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
     */
    showExamples(command) {
        const examples = {
            'author:new': [
                {
                    title: '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã',
                    description: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Üí –¢–µ–º–∞ —É—Ä–æ–∫–∞ ‚Üí –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ',
                    output: '–°–æ–∑–¥–∞—Å—Ç: content/basics/01-introduction/topic.md'
                }
            ],
            'content:check': [
                {
                    title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                    description: '–ü—Ä–æ–≤–µ—Ä–∏—Ç –≤—Å–µ .md —Ñ–∞–π–ª—ã –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –æ—à–∏–±–∫–∏',
                    output: '–ü–æ–∫–∞–∂–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π'
                }
            ],
            'git:sync': [
                {
                    title: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞',
                    description: '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã ‚Üí –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–º–∏—Ç',
                    output: 'git add content/ && git commit -m "content: ...\"'
                }
            ]
        };

        if (examples[command]) {
            console.log(chalk.blue('üí° –ü—Ä–∏–º–µ—Ä—ã:\n'));
            examples[command].forEach(example => {
                console.log(chalk.green(`  ${example.title}`));
                console.log(chalk.gray(`  ${example.description}`));
                if (example.output) {
                    console.log(chalk.gray(`  ‚Üí ${example.output}\n`));
                }
            });
        }
    }

    /**
     * –ü–æ–∫–∞–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
     */
    showRelatedCommands(command, category) {
        const related = {
            'author:new': ['author:validate', 'content:format'],
            'author:validate': ['content:check', 'author:publish'],
            'content:check': ['content:format', 'author:validate'],
            'content:build': ['godojo:validate', 'godojo:prepare']
        };

        if (related[command]) {
            console.log(chalk.blue('üîó –°–º. —Ç–∞–∫–∂–µ:\n'));
            related[command].forEach(rel => {
                const relCmd = this.findCommand(rel);
                if (relCmd) {
                    console.log(chalk.yellow(`  npm run ${rel}`).padEnd(30) + chalk.gray(`- ${relCmd.description}`));
                }
            });
            console.log('');
        }
    }

    /**
     * –ü–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
     */
    findCommand(cmdName) {
        for (const data of Object.values(this.commands)) {
            if (data.commands[cmdName]) {
                return data.commands[cmdName];
            }
        }
        return null;
    }

    /**
     * –ü–æ–∫–∞–∑ –≤–µ—Ä—Å–∏–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
     */
    async showVersionInfo() {
        try {
            if (existsSync('package.json')) {
                const packageJson = JSON.parse(await readFile('package.json', 'utf8'));

                console.log(chalk.gray('‚îÄ'.repeat(50)));
                console.log(chalk.gray(`–í–µ—Ä—Å–∏—è: ${packageJson.version || 'dev'}`));
                console.log(chalk.gray(`Node.js: ${process.version}`));
                console.log(chalk.gray(`–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${process.platform}`));
            }
        } catch (error) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        }
    }

    /**
     * –ü–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥ (–¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±—É–¥—É—â–µ–º)
     */
    searchCommands(query) {
        const results = [];
        const searchTerm = query.toLowerCase();

        for (const [category, data] of Object.entries(this.commands)) {
            for (const [cmd, info] of Object.entries(data.commands)) {
                if (cmd.includes(searchTerm) || info.description.toLowerCase().includes(searchTerm)) {
                    results.push({
                        command: cmd,
                        description: info.description,
                        category: data.title
                    });
                }
            }
        }

        return results;
    }
}

// –ó–∞–ø—É—Å–∫
const help = new HelpSystem();
const args = process.argv.slice(2);
help.run(args);