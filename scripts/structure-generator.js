#!/usr/bin/env node

import { mkdir, writeFile, readFile } from 'node:fs/promises';
import { join } from 'node:path';
import { existsSync } from 'node:fs';
import chalk from 'chalk';
import ora from 'ora';
import inquirer from 'inquirer';

/**
 * Structure Generator
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
 */
class StructureGenerator {
    constructor() {
        this.createdItems = [];
        this.skippedItems = [];
    }

    /**
     * –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
     */
    async run() {
        console.log(chalk.blue.bold('\nüèóÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞\n'));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ –ø–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
        const needsFullSetup = !existsSync('content.config.json');

        if (needsFullSetup) {
            console.log(chalk.yellow('‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.\n'));
            await this.fullSetup();
        } else {
            await this.selectiveGeneration();
        }
    }

    /**
     * –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
     */
    async fullSetup() {
        const { confirmSetup } = await inquirer.prompt([{
            type: 'confirm',
            name: 'confirmSetup',
            message: '–°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ Go Tutorial?',
            default: true
        }]);

        if (!confirmSetup) {
            console.log(chalk.gray('\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞\n'));
            return;
        }

        const spinner = ora('–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...').start();

        try {
            // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            spinner.text = '–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...';
            await this.createDirectories();

            // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            spinner.text = '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...';
            await this.createConfigFiles();

            // –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
            spinner.text = '–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...';
            await this.createDocumentation();

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            spinner.text = '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...';
            await this.createSampleContent();

            spinner.succeed('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!');

            // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            this.printResults();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
            this.showNextSteps();

        } catch (error) {
            spinner.fail(`–û—à–∏–±–∫–∞: ${error.message}`);
            process.exit(1);
        }
    }

    /**
     * –í—ã–±–æ—Ä–æ—á–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
     */
    async selectiveGeneration() {
        const { action } = await inquirer.prompt([{
            type: 'list',
            name: 'action',
            message: '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å?',
            choices: [
                {
                    name: 'üìÅ –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏',
                    value: 'directories'
                },
                {
                    name: 'üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã',
                    value: 'config'
                },
                {
                    name: 'üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é',
                    value: 'docs'
                },
                {
                    name: 'üéØ –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                    value: 'sample'
                },
                {
                    name: 'üîß –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã',
                    value: 'scripts'
                },
                {
                    name: '‚ùå –û—Ç–º–µ–Ω–∞',
                    value: 'cancel'
                }
            ]
        }]);

        if (action === 'cancel') {
            console.log(chalk.gray('\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞\n'));
            return;
        }

        const spinner = ora('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è...').start();

        try {
            switch (action) {
                case 'directories':
                    await this.createDirectories();
                    break;
                case 'config':
                    await this.createConfigFiles();
                    break;
                case 'docs':
                    await this.createDocumentation();
                    break;
                case 'sample':
                    await this.createSampleContent();
                    break;
                case 'scripts':
                    await this.createMissingScripts();
                    break;
            }

            spinner.succeed('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
            this.printResults();

        } catch (error) {
            spinner.fail(`–û—à–∏–±–∫–∞: ${error.message}`);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
     */
    async createDirectories() {
        const directories = [
            'content',
            'content/basics',
            'content/advanced',
            'content/web',
            'content/concurrency',
            'content/testing',
            'scripts',
            'build',
            '.github',
            '.github/workflows'
        ];

        for (const dir of directories) {
            await this.ensureDirectory(dir);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
     */
    async createConfigFiles() {
        // content.config.json
        const contentConfig = {
            "structure": {
                "defaultLanguage": "ru",
                "languages": ["ru"]
            },
            "godojo": {
                "platform": "godojo.dev",
                "apiEndpoint": "https://api.godojo.dev/v1"
            },
            "categories": [
                {
                    "slug": "basics",
                    "titleRu": "–û—Å–Ω–æ–≤—ã Go",
                    "titleEn": "Go Basics",
                    "descriptionRu": "–ò–∑—É—á–∏—Ç–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —è–∑—ã–∫–∞ Go",
                    "descriptionEn": "Learn fundamental Go language concepts",
                    "modules": "1-15",
                    "difficulty": "Beginner",
                    "estimatedHours": 20
                },
                {
                    "slug": "advanced",
                    "titleRu": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π Go",
                    "titleEn": "Advanced Go",
                    "descriptionRu": "–ì–ª—É–±–æ–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Go",
                    "descriptionEn": "Deep dive into advanced Go features",
                    "modules": "16-30",
                    "difficulty": "Intermediate",
                    "estimatedHours": 30
                },
                {
                    "slug": "web",
                    "titleRu": "Web-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
                    "titleEn": "Web Development",
                    "descriptionRu": "–°–æ–∑–¥–∞–Ω–∏–µ web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Go",
                    "descriptionEn": "Building web applications with Go",
                    "modules": "31-45",
                    "difficulty": "Intermediate",
                    "estimatedHours": 25
                },
                {
                    "slug": "concurrency",
                    "titleRu": "–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å",
                    "titleEn": "Concurrency",
                    "descriptionRu": "–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Go",
                    "descriptionEn": "Mastering concurrent programming in Go",
                    "modules": "46-60",
                    "difficulty": "Advanced",
                    "estimatedHours": 35
                },
                {
                    "slug": "testing",
                    "titleRu": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
                    "titleEn": "Testing",
                    "descriptionRu": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Go –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
                    "descriptionEn": "Professional testing of Go applications",
                    "modules": "61-79",
                    "difficulty": "Advanced",
                    "estimatedHours": 30
                }
            ],
            "quality": {
                "minWords": 800,
                "minCodeExamples": 3,
                "minExercises": 2
            }
        };

        await this.createFile('content.config.json', JSON.stringify(contentConfig, null, 2));

        // .gitignore
        const gitignore = `# Dependencies
node_modules/

# Build output
build/
dist/
*.log

# OS files
.DS_Store
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo

# Local configs
.env
.env.local
.content-author-config.json

# Temporary files
*.tmp
*.temp
`;

        await this.createFile('.gitignore', gitignore);

        // .prettierrc
        const prettierConfig = {
            "semi": true,
            "trailingComma": "es5",
            "singleQuote": true,
            "printWidth": 100,
            "tabWidth": 2,
            "useTabs": false,
            "arrowParens": "avoid",
            "endOfLine": "lf",
            "overrides": [
                {
                    "files": "*.md",
                    "options": {
                        "proseWrap": "preserve"
                    }
                }
            ]
        };

        await this.createFile('.prettierrc', JSON.stringify(prettierConfig, null, 2));
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
     */
    async createDocumentation() {
        // README.md
        const readme = `# üìö Go Tutorial Content - –†—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è

> –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Go –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ [godojo.dev](https://godojo.dev)

## üéØ –û –ø—Ä–æ–µ–∫—Ç–µ

–≠—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —è–∑—ã–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Go. –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω –≤ –≤–∏–¥–µ 79 –º–æ–¥—É–ª–µ–π, –ø–æ–∫—Ä—ã–≤–∞—é—â–∏—Ö –ø—É—Ç—å –æ—Ç –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ –¥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞.

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

\`\`\`bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
git clone https://github.com/YOUR_USERNAME/golang-book-ru.git
cd golang-book-ru

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∞
npm run author:init

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
npm run author:new
\`\`\`

## üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

\`\`\`
golang-book-ru/
‚îú‚îÄ‚îÄ content/              # –í–µ—Å—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
‚îÇ   ‚îú‚îÄ‚îÄ basics/          # –û—Å–Ω–æ–≤—ã Go (–º–æ–¥—É–ª–∏ 1-15)
‚îÇ   ‚îú‚îÄ‚îÄ advanced/        # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã (–º–æ–¥—É–ª–∏ 16-30)
‚îÇ   ‚îú‚îÄ‚îÄ web/            # Web-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (–º–æ–¥—É–ª–∏ 31-45)
‚îÇ   ‚îú‚îÄ‚îÄ concurrency/    # –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å (–º–æ–¥—É–ª–∏ 46-60)
‚îÇ   ‚îî‚îÄ‚îÄ testing/        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–º–æ–¥—É–ª–∏ 61-79)
‚îú‚îÄ‚îÄ scripts/            # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
‚îú‚îÄ‚îÄ content.config.json # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
‚îî‚îÄ‚îÄ package.json        # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–∫—Ä–∏–ø—Ç—ã
\`\`\`

## üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

### –î–ª—è –∞–≤—Ç–æ—Ä–æ–≤
- \`npm run author:init\` - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∞–≤—Ç–æ—Ä–∞
- \`npm run author:new\` - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- \`npm run author:validate\` - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- \`npm run author:stats\` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ—Ä–∞

### –î–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- \`npm run content:check\` - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- \`npm run content:format\` - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ markdown

### –î–ª—è –ø—Ä–æ–µ–∫—Ç–∞
- \`npm run structure:validate\` - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- \`npm run test\` - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤

## ü§ù –ö–∞–∫ –≤–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥

–ú—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç! –°–º. [CONTRIBUTING.md](./CONTRIBUTING.md) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

MIT ¬© [godojo.dev](https://godojo.dev)
`;

        await this.createFile('README.md', readme);

        // –ë–∞–∑–æ–≤—ã–π CONTRIBUTING.md –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!existsSync('CONTRIBUTING.md')) {
            const contributing = `# –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

–°–º. –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

1. –§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
2. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ Pull Request

## –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞

- –ú–∏–Ω–∏–º—É–º 800 —Å–ª–æ–≤ –Ω–∞ —Ç–µ–º—É
- –ú–∏–Ω–∏–º—É–º 3 –ø—Ä–∏–º–µ—Ä–∞ –∫–æ–¥–∞
- –ú–∏–Ω–∏–º—É–º 2 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
- –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è

## –ü–æ–º–æ—â—å

–°–æ–∑–¥–∞–π—Ç–µ issue –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å!
`;

            await this.createFile('CONTRIBUTING.md', contributing);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     */
    async createSampleContent() {
        // –ü—Ä–∏–º–µ—Ä index.md –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categoryIndex = `---
title: "–û—Å–Ω–æ–≤—ã Go"
description: "–ò–∑—É—á–∏—Ç–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —è–∑—ã–∫–∞ Go"
category: "basics"
difficulty: "Beginner"
estimatedHours: 20
modules: "1-15"
language: "ru"
authorId: "system"
lastUpdated: "${new Date().toISOString()}"
gitPath: "content/basics/index.md"
---

# –û—Å–Ω–æ–≤—ã Go

## –û–±–∑–æ—Ä

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª "–û—Å–Ω–æ–≤—ã Go"! –ó–¥–µ—Å—å –≤—ã –∏–∑—É—á–∏—Ç–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Go.

## –ß—Ç–æ –≤—ã –∏–∑—É—á–∏—Ç–µ

- –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ Go
- –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
- –§—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã
- –°—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
- –û—Å–Ω–æ–≤—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç–∏

## –ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ

–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–≤—É—é —Ç–µ–º—É –∏ –Ω–∞—á–Ω–∏—Ç–µ –≤–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä Go!
`;

        await this.createFile('content/basics/index.md', categoryIndex);

        // –ü—Ä–∏–º–µ—Ä —Ç–µ–º—ã
        const topicDir = 'content/basics/01-introduction';
        await this.ensureDirectory(topicDir);

        const topicContent = `---
title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Go"
description: "–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —è–∑—ã–∫–æ–º Go –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
module: 1
category: "basics"
slug: "01-introduction"
language: "ru"
difficulty: "Beginner"
estimatedMinutes: 30
tags: ["golang", "basics", "setup"]
objectives:
  - "–ü–æ–Ω—è—Ç—å —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é Go"
  - "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Go –Ω–∞ –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É"
  - "–ù–∞–ø–∏—Å–∞—Ç—å –ø–µ—Ä–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É"
prerequisites:
  - "–ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"
authorId: "system"
lastUpdated: "${new Date().toISOString()}"
gitPath: "content/basics/01-introduction/topic.md"
---

# –í–≤–µ–¥–µ–Ω–∏–µ –≤ Go

## üéØ –ß—Ç–æ –≤—ã –∏–∑—É—á–∏—Ç–µ

–í —ç—Ç–æ–π —Ç–µ–º–µ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å —è–∑—ã–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Go, –µ–≥–æ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–µ–π –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

## üìö –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å

Go - —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –≤ Google. –û–Ω —Å–æ—á–µ—Ç–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ—Ç—É, –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.

### –ü–æ—á–µ–º—É Go?

- **–ü—Ä–æ—Å—Ç–æ—Ç–∞**: –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
- **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: –ö–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ –º–∞—à–∏–Ω–Ω—ã–π –∫–æ–¥
- **–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å**: –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ—Ä—É—Ç–∏–Ω
- **–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã**: –ë–æ–≥–∞—Ç–∞—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞

## üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã

### –ü—Ä–∏–º–µ—Ä 1: Hello, World!

\`\`\`go
package main

import "fmt"

func main() {
    fmt.Println("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")
}
\`\`\`

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**
- \`package main\` - –æ–±—ä—è–≤–ª—è–µ—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –ø–∞–∫–µ—Ç
- \`import "fmt"\` - –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
- \`func main()\` - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É

### –ü—Ä–∏–º–µ—Ä 2: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã

\`\`\`go
package main

import "fmt"

func main() {
    var name string = "Go"
    version := 1.21
    
    fmt.Printf("–Ø–∑—ã–∫: %s, –í–µ—Ä—Å–∏—è: %.2f\\n", name, version)
}
\`\`\`

### –ü—Ä–∏–º–µ—Ä 3: –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è

\`\`\`go
package main

import "fmt"

func greet(name string) string {
    return fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %s!", name)
}

func main() {
    message := greet("—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫")
    fmt.Println(message)
}
\`\`\`

## üéØ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è

### –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1: –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

**–ó–∞–¥–∞—á–∞:** –ò–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É Hello World, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏.

### –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä

**–ó–∞–¥–∞—á–∞:** –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞.

## üìù –†–µ–∑—é–º–µ

–í—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –æ—Å–Ω–æ–≤–∞–º–∏ Go –∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É. –í —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ–º–∞—Ö –º—ã —É–≥–ª—É–±–∏–º—Å—è –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —è–∑—ã–∫–∞.
`;

        await this.createFile(join(topicDir, 'topic.md'), topicContent);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
     */
    async createMissingScripts() {
        const scripts = [
            'help.js',
            'bilingual-sync.js',
            'bilingual-checker.js',
            'godojo-prepare.js',
            'godojo-validator.js'
        ];

        for (const script of scripts) {
            const scriptPath = join('scripts', script);
            if (!existsSync(scriptPath)) {
                await this.createScriptStub(script);
            }
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
     */
    async createScriptStub(scriptName) {
        const stub = `#!/usr/bin/env node

import chalk from 'chalk';
import boxen from 'boxen';

console.log(boxen(
  chalk.yellow('üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\\n\\n') +
  chalk.white('–≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö'),
  { 
    padding: 1, 
    borderColor: 'yellow', 
    borderStyle: 'round',
    title: '${scriptName}',
    titleAlignment: 'center'
  }
));

process.exit(0);
`;

        await this.createFile(join('scripts', scriptName), stub);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
     */
    async ensureDirectory(path) {
        if (!existsSync(path)) {
            await mkdir(path, { recursive: true });
            this.createdItems.push(`üìÅ ${path}`);
        } else {
            this.skippedItems.push(`üìÅ ${path}`);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
     */
    async createFile(path, content) {
        if (!existsSync(path)) {
            await this.ensureDirectory(join(path, '..'));
            await writeFile(path, content, 'utf8');
            this.createdItems.push(`üìÑ ${path}`);
        } else {
            this.skippedItems.push(`üìÑ ${path}`);
        }
    }

    /**
     * –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     */
    printResults() {
        console.log(chalk.blue('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:\n'));

        if (this.createdItems.length > 0) {
            console.log(chalk.green(`‚úÖ –°–æ–∑–¥–∞–Ω–æ: ${this.createdItems.length}\n`));
            this.createdItems.forEach(item => {
                console.log(chalk.green(`  ${item}`));
            });
        }

        if (this.skippedItems.length > 0) {
            console.log(chalk.yellow(`\n‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): ${this.skippedItems.length}\n`));
            if (this.skippedItems.length <= 10) {
                this.skippedItems.forEach(item => {
                    console.log(chalk.gray(`  ${item}`));
                });
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤
     */
    showNextSteps() {
        console.log(chalk.blue('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n'));
        console.log(chalk.gray('1.'), chalk.cyan('npm run author:init'), '- –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞');
        console.log(chalk.gray('2.'), chalk.cyan('npm run author:new'), '- —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç');
        console.log(chalk.gray('3.'), chalk.cyan('git init'), '- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
        console.log(chalk.gray('4.'), '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ', chalk.cyan('CONTRIBUTING.md'), '–¥–ª—è –¥–µ—Ç–∞–ª–µ–π');
        console.log('');
    }
}

// –ó–∞–ø—É—Å–∫
const generator = new StructureGenerator();
generator.run();